@model BookMart.Models.BookViewModel
@{
    ViewData["Title"] = "Books";
    Layout = "adminLayout";
}

<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <span>Book List</span>
                <div class="d-flex gap-2">
                    <form asp-controller="Admin" asp-action="Books" method="get" class="d-flex">
                        <input type="text" class="form-control" name="searchQuery" value="@Model.SearchQuery" placeholder="Search books...">
                        <button type="submit" class="btn btn-outline ms-2">
                            <i class="fas fa-search"></i>
                        </button>
                    </form>
                    <a asp-controller="Admin" asp-action="AddBook" class="btn btn-outline">
                        <i class="fas fa-plus me-2"></i>Add Book
                    </a>
                </div>
            </div>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show m-3" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show m-3" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Book</th>
                        <th>Author</th>
                        <th>Genre</th>
                        <th>Price</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Books != null && Model.Books.Any())
                    {
                        @foreach (var book in Model.Books)
                        {
                            <tr>
                                <td>
                                    <img src="@(string.IsNullOrEmpty(book.CoverImageURL) ? "/images/default-book.jpg" : book.CoverImageURL)"
                                         style="width:60px;height:80px; object-fit: cover;" class="rounded shadow-sm" alt="book image">
                                </td>
                                <td>
                                    <div class="fw-semibold">@book.Title</div>
                                </td>
                                <td>@book.Author</td>
                                <td>
                                    <span class="badge badge">@(book.Genre?.Name ?? "N/A")</span>
                                </td>
                                <td>₹@book.Price.ToString("N2")</td>
                                <td>
                                    <div class="d-flex gap-2">
                                        <a asp-controller="Admin" asp-action="EditBook" asp-route-id="@book.BookID" class="btn btn-outline btn-sm">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <form asp-controller="Admin" asp-action="DeleteBook" asp-route-id="@book.BookID" method="post" onsubmit="return confirm('Are you sure you want to delete this book?');" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline btn-sm">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center py-4">
                                <div class="text-muted">No books found.</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer">
            <div class="d-flex justify-content-between align-items-center">
                <div class="text-muted small">
                    Showing @(Model.Books.Any() ? 1 : 0)-@Model.Books.Count of @(Model.Books.Count) books
                </div>
                <ul class="pagination mb-0">
                    <li class="page-item disabled">
                        <a class="page-link" href="#"><i class="fas fa-chevron-left"></i></a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#"><i class="fas fa-chevron-right"></i></a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>


    <script>
        // You can add page-specific scripts here if needed
    </script>